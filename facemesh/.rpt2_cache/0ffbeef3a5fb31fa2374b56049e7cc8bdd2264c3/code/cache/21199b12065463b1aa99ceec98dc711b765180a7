{"code":"import * as tf from '@tensorflow/tfjs-core';\r\nexport function disposeBox(box) {\r\n    if (box != null && box.startPoint != null) {\r\n        box.startEndTensor.dispose();\r\n        box.startPoint.dispose();\r\n        box.endPoint.dispose();\r\n    }\r\n}\r\nexport function createBox(startEndTensor, startPoint, endPoint) {\r\n    return {\r\n        startEndTensor,\r\n        startPoint: startPoint != null ? startPoint :\r\n            tf.slice(startEndTensor, [0, 0], [-1, 2]),\r\n        endPoint: endPoint != null ? endPoint :\r\n            tf.slice(startEndTensor, [0, 2], [-1, 2])\r\n    };\r\n}\r\nexport function scaleBoxCoordinates(box, factor) {\r\n    const newStart = tf.mul(box.startPoint, factor);\r\n    const newEnd = tf.mul(box.endPoint, factor);\r\n    return createBox(tf.concat2d([newStart, newEnd], 1));\r\n}\r\nexport function getBoxSize(box) {\r\n    return tf.tidy(() => {\r\n        const diff = tf.sub(box.endPoint, box.startPoint);\r\n        return tf.abs(diff);\r\n    });\r\n}\r\nexport function getBoxCenter(box) {\r\n    return tf.tidy(() => {\r\n        const halfSize = tf.div(tf.sub(box.endPoint, box.startPoint), 2);\r\n        return tf.add(box.startPoint, halfSize);\r\n    });\r\n}\r\nexport function cutBoxFromImageAndResize(box, image, cropSize) {\r\n    const height = image.shape[1];\r\n    const width = image.shape[2];\r\n    const xyxy = box.startEndTensor;\r\n    return tf.tidy(() => {\r\n        const yxyx = tf.concat2d([\r\n            xyxy.slice([0, 1], [-1, 1]), xyxy.slice([0, 0], [-1, 1]),\r\n            xyxy.slice([0, 3], [-1, 1]), xyxy.slice([0, 2], [-1, 1])\r\n        ], 0);\r\n        const roundedCoords = tf.div(yxyx.transpose(), [height, width, height, width]);\r\n        return tf.image.cropAndResize(image, roundedCoords, [0], cropSize);\r\n    });\r\n}\r\nexport function enlargeBox(box, factor = 1.5) {\r\n    return tf.tidy(() => {\r\n        const center = getBoxCenter(box);\r\n        const size = getBoxSize(box);\r\n        const newSize = tf.mul(tf.div(size, 2), factor);\r\n        const newStart = tf.sub(center, newSize);\r\n        const newEnd = tf.add(center, newSize);\r\n        return createBox(tf.concat2d([newStart, newEnd], 1), newStart, newEnd);\r\n    });\r\n}\r\n//# sourceMappingURL=box.js.map","map":"{\"version\":3,\"file\":\"box.js\",\"sourceRoot\":\"\",\"sources\":[\"src/box.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/khushibhansali/Documents/SmartMirror/facemesh/box.d.ts","writeByteOrderMark":false,"text":"import * as tf from '@tensorflow/tfjs-core';\r\nexport declare type Box = {\r\n    startPoint: tf.Tensor2D;\r\n    endPoint: tf.Tensor2D;\r\n    startEndTensor: tf.Tensor2D;\r\n};\r\nexport declare function disposeBox(box: Box): void;\r\nexport declare function createBox(startEndTensor: tf.Tensor2D, startPoint?: tf.Tensor2D, endPoint?: tf.Tensor2D): Box;\r\nexport declare function scaleBoxCoordinates(box: Box, factor: tf.Tensor1D | [number, number]): Box;\r\nexport declare function getBoxSize(box: Box): tf.Tensor2D;\r\nexport declare function getBoxCenter(box: Box): tf.Tensor2D;\r\nexport declare function cutBoxFromImageAndResize(box: Box, image: tf.Tensor4D, cropSize: [number, number]): tf.Tensor4D;\r\nexport declare function enlargeBox(box: Box, factor?: number): Box;\r\n"}}
